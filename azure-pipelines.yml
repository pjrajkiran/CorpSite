# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
trigger:
- master
pool:
  vmImage: 'ubuntu-latest'
stages:
- stage: CI
  jobs:
  - job: BuildJob
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.8'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        goals: 'package'
    # - task: Maven@3
    #   inputs:
    #     mavenPomFile: 'pom.xml'
    #     goals: 'deploy'
    # - task: PublishBuildArtifacts@1
    #   inputs:
    #     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    #     ArtifactName: 'Test now'
    #     publishLocation: 'Container'
    # - task: PublishPipelineArtifact@1
    #   inputs:
    #     targetPath: '$(Pipeline.Workspace)'
    #     artifact: 'Test'
    #     publishLocation: 'pipeline'
    - publish: $(System.DefaultWorkingDirectory)/target/globex-web.war
      artifact: Globex-web
- stage: UAT_deploy
  jobs:
  - deployment: DeployUAT
    displayName: Deploy to UAT
    pool:
      vmImage: 'Ubuntu-16.04'
    environment: 'UAT'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo my first deployment
- stage: UAT_test
  jobs:
  - deployment: DeployUAT
    displayName: Deploy to UAT
    pool:
      vmImage: 'Ubuntu-16.04'
    environment: 'UAT'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo my first deployment